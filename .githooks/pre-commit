#!/bin/bash


# the -e option ensures that the commit will be aborted immediately if
# PyLint or Black fail (= return a non-zero exit status)
set -e


# Firstly check if any files have been staged for commit
stagedFiles=`git diff --staged  --name-only`
if [ -z "${stagedFiles-}" ]
then
    printf "No files staged for commit. Exiting.\n"
    exit 1
fi


if [[ $stagedFiles != *".py"* ]]; then
  printf "\n\nNo python files found in commit, proceeding directly to commit\n\n"
  exit 0
fi


printf "\n\nUses a custom git hook for verifying the integrity of your commit."
printf "\nThe pre-hook will run :\n"
printf "\n1. Unit tests"
printf "\n2. Black - Code formatter"
printf "\n3. Pylint - Linter\n\n"


printf "*********************\n"
printf "PYTHON TESTS"
printf '\nRunning tests\n'

pipenv run python -m unittest discover . > /dev/null
if [ $? -ne 0 ]; then
    echo 'Tests failed. Aborting commit'
    exit 1
fi


coverage report -m --omit="*/lib/*"


printf "*********************\n"
printf "BLACK - PYTHON CODE FORMATTER"
printf "\nFormatting code with Black\n"

for i in $(git diff --staged  --name-only)
do
    if [ ${i: -3} == ".py" ]
    then
        printf "\nRunning Black on python file: "
        echo $i
        black $i || printf "\n\nCould not run Black for file: $i. \nThis is normal if the file was deleted in the commit.\n"
    fi
done

printf "\nBlack passed successfully\n\n"


printf "*********************\n"

for i in $(git diff --staged  --name-only)
do
    if [ ${i: -3} == ".py" ]
    then
        printf "\nRunning Pylint on python file: "
        echo $i
        pylint $i || printf "\n\nCould not run Pylint for file: $i. \nThis is normal if the file was deleted in the commit.\n"
    fi
done

printf "*********************\n"
printf "GREAT SUCCESS. \nTests, Mypy, Pylint and Black succesful\n"
printf "Running git add again for all changed files to ensure the formatted versions are committed\n"

# Adding staged files that were formatted to the commit
for i in $(git diff --staged  --name-only)
do

    if ! [ ${i: 3} == "del" ]
    then
      git add "$i" || printf "Could not add file $i. \nThis is normal if the file was deleted in the commit.\n"
    fi
done

printf "\nPre-commit hook completed successfully"

printf "\nThank You for writing clean code!"
printf "\n\n"

exit 0
